NAME
    BusyBox - The Swiss Army Knife of Embedded Linux

SYNTAX
     busybox <applet> [arguments...]  # or

     <applet> [arguments...]          # if symlinked

DESCRIPTION
    BusyBox combines tiny versions of many common UNIX utilities into a
    single small executable. It provides minimalist replacements for most of
    the utilities you usually find in GNU coreutils, util-linux, etc. The
    utilities in BusyBox generally have fewer options than their
    full-featured GNU cousins; however, the options that are included
    provide the expected functionality and behave very much like their GNU
    counterparts.

    BusyBox has been written with size-optimization and limited resources in
    mind. It is also extremely modular so you can easily include or exclude
    commands (or features) at compile time. This makes it easy to customize
    your embedded systems. To create a working system, just add /dev, /etc,
    and a Linux kernel. BusyBox provides a fairly complete POSIX environment
    for any small or embedded system.

    BusyBox is extremely configurable. This allows you to include only the
    components you need, thereby reducing binary size. Run 'make config' or
    'make menuconfig' to select the functionality that you wish to enable.
    Then run 'make' to compile BusyBox using your configuration.

    After the compile has finished, you should use 'make install' to install
    BusyBox. This will install the 'bin/busybox' binary, in the target
    directory specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when
    configuring BusyBox, or you can specify an alternative location at
    install time (i.e., with a command line like 'make
    CONFIG_PREFIX=/tmp/foo install'). If you enabled any applet installation
    scheme (either as symlinks or hardlinks), these will also be installed
    in the location pointed to by CONFIG_PREFIX.

USAGE
    BusyBox is a multi-call binary. A multi-call binary is an executable
    program that performs the same job as more than one utility program.
    That means there is just a single BusyBox binary, but that single binary
    acts like a large number of utilities. This allows BusyBox to be smaller
    since all the built-in utility programs (we call them applets) can share
    code for many common operations.

    You can also invoke BusyBox by issuing a command as an argument on the
    command line. For example, entering

            /bin/busybox ls

    will also cause BusyBox to behave as 'ls'.

    Of course, adding '/bin/busybox' into every command would be painful. So
    most people will invoke BusyBox using links to the BusyBox binary.

    For example, entering

            ln -s /bin/busybox ls
            ./ls

    will cause BusyBox to behave as 'ls' (if the 'ls' command has been
    compiled into BusyBox). Generally speaking, you should never need to
    make all these links yourself, as the BusyBox build system will do this
    for you when you run the 'make install' command.

    If you invoke BusyBox with no arguments, it will provide you with a list
    of the applets that have been compiled into your BusyBox binary.

COMMON OPTIONS
    Most BusyBox applets support the --help argument to provide a terse
    runtime description of their behavior. If the
    CONFIG_FEATURE_VERBOSE_USAGE option has been enabled, more detailed
    usage information will also be available.

COMMANDS
    Currently available applets include:

            ash, bash, cat, catv, chmod, chown, cp, cpio, cut, date, dd, depmod,
            df, dnsdomainname, dos2unix, echo, egrep, env, false, fgrep, getty,
            grep, gunzip, gzip, halt, hostname, hush, ifconfig, ifdown,
            ifenslave, ifplugd, ifup, init, insmod, ip, ipaddr, iplink, iproute,
            iprule, iptunnel, kill, killall, killall5, linuxrc, ln, ls, lsmod,
            mdev, mesg, mkdir, mknod, modinfo, modprobe, mount, mv, netstat,
            passwd, ping, poweroff, printenv, printf, ps, pwd, reboot, rm,
            rmdir, rmmod, sed, sh, sleep, stat, sync, tar, top, true, udhcpc,
            umount, uncompress, unix2dos, usleep, vi, watch, wc, wget, zcat

COMMAND DESCRIPTIONS
    ash ash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
        [ARGS]]

        Unix shell interpreter

    bash
        bash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
        [ARGS]]

        Unix shell interpreter

    cat cat [FILE]...

        Concatenate FILEs and print them to stdout

    catv
        catv [-etv] [FILE]...

        Display nonprinting characters as ^x or M-x

                -e      End each line with $
                -t      Show tabs as ^I
                -v      Don't use ^x or M-x escapes

    chmod
        chmod [-R] MODE[,MODE]... FILE...

        Each MODE is one or more of the letters ugoa, one of the symbols +-=
        and one or more of the letters rwxst

                -R      Recurse

    chown
        chown [-RhLHP]... OWNER[<.|:>[GROUP]] FILE...

        Change the owner and/or group of each FILE to OWNER and/or GROUP

                -R      Recurse
                -h      Affect symlinks instead of symlink targets
                -L      Traverse all symlinks to directories
                -H      Traverse symlinks on command line only
                -P      Don't traverse symlinks (default)

    cp  cp [OPTIONS] SOURCE... DEST

        Copy SOURCE(s) to DEST

                -a      Same as -dpR
                -R,-r   Recurse
                -d,-P   Preserve symlinks (default if -R)
                -L      Follow all symlinks
                -H      Follow symlinks on command line
                -p      Preserve file attributes if possible
                -f      Overwrite
                -i      Prompt before overwrite
                -l,-s   Create (sym)links

    cpio
        cpio [-dmvu] [-F FILE] [-H newc] [-tio] [-p DIR] [EXTR_FILE]...

        Extract or list files from a cpio archive, or create an archive (-o)
        or copy files (-p) using file list on stdin

        Main operation mode:

                -t      List
                -i      Extract EXTR_FILEs (or all)
                -o      Create (requires -H newc)
                -p DIR  Copy files to DIR
                -d      Make leading directories
                -m      Preserve mtime
                -v      Verbose
                -u      Overwrite
                -F FILE Input (-t,-i,-p) or output (-o) file
                -H newc Archive format

    cut cut [OPTIONS] [FILE]...

        Print selected fields from each input FILE to stdout

                -b LIST Output only bytes from LIST
                -c LIST Output only characters from LIST
                -d CHAR Use CHAR instead of tab as the field delimiter
                -s      Output only the lines containing delimiter
                -f N    Print only these fields
                -n      Ignored

    date
        date [OPTIONS] [+FMT] [TIME]

        Display time (using +FMT), or set time

                [-s,--set] TIME Set time to TIME
                -u,--utc        Work in UTC (don't convert to local time)
                -R,--rfc-2822   Output RFC-2822 compliant date string
                -I[SPEC]        Output ISO-8601 compliant date string
                                SPEC='date' (default) for date only,
                                'hours', 'minutes', or 'seconds' for date and
                                time to the indicated precision
                -r,--reference FILE     Display last modification time of FILE
                -d,--date TIME  Display TIME, not 'now'
                -D FMT          Use FMT for -d TIME conversion

        Recognized TIME formats:

                hh:mm[:ss]
                [YYYY.]MM.DD-hh:mm[:ss]
                YYYY-MM-DD hh:mm[:ss]
                [[[[[YY]YY]MM]DD]hh]mm[.ss]
                'date TIME' form accepts MMDDhhmm[[YY]YY][.ss] instead

    dd  dd [if=FILE] [of=FILE] [ibs=N] [obs=N] [bs=N] [count=N] [skip=N]
        [seek=N] [conv=notrunc|noerror|sync|fsync]

        Copy a file with converting and formatting

                if=FILE         Read from FILE instead of stdin
                of=FILE         Write to FILE instead of stdout
                bs=N            Read and write N bytes at a time
                ibs=N           Read N bytes at a time
                obs=N           Write N bytes at a time
                count=N         Copy only N input blocks
                skip=N          Skip N input blocks
                seek=N          Skip N output blocks
                conv=notrunc    Don't truncate output file
                conv=noerror    Continue after read errors
                conv=sync       Pad blocks with zeros
                conv=fsync      Physically write data out before finishing
                conv=swab       Swap every pair of bytes

        N may be suffixed by c (1), w (2), b (512), kD (1000), k (1024), MD,
        M, GD, G

    depmod
        depmod [-qfwrsv] MODULE [symbol=value]...

                -r      Remove MODULE (stacks) or do autoclean
                -q      Quiet
                -v      Verbose
                -f      Force
                -w      Wait for unload
                -s      Report via syslog instead of stderr

    df  df [-Pkai] [-B SIZE] [FILESYSTEM]...

        Print filesystem usage statistics

                -P      POSIX output format
                -k      1024-byte blocks (default)
                -a      Show all filesystems
                -i      Inodes
                -B SIZE Blocksize

    dos2unix
        dos2unix [-ud] [FILE]

        Convert FILE in-place from DOS to Unix format. When no file is
        given, use stdin/stdout.

                -u      dos2unix
                -d      unix2dos

    echo
        echo [-neE] [ARG]...

        Print the specified ARGs to stdout

                -n      Suppress trailing newline
                -e      Interpret backslash escapes (i.e., \t=tab)
                -E      Don't interpret backslash escapes (default)

    env env [-iu] [-] [name=value]... [PROG ARGS]

        Print the current environment or run PROG after setting up the
        specified environment

                -, -i   Start with an empty environment
                -u      Remove variable from the environment

    false
        false

        Return an exit code of FALSE (1)

    getty
        getty [OPTIONS] BAUD_RATE[,BAUD_RATE]... TTY [TERMTYPE]

        Open TTY, prompt for login name, then invoke /bin/login

                -h              Enable hardware RTS/CTS flow control
                -L              Set CLOCAL (ignore Carrier Detect state)
                -m              Get baud rate from modem's CONNECT status message
                -n              Don't prompt for login name
                -w              Wait for CR or LF before sending /etc/issue
                -i              Don't display /etc/issue
                -f ISSUE_FILE   Display ISSUE_FILE instead of /etc/issue
                -l LOGIN        Invoke LOGIN instead of /bin/login
                -t SEC          Terminate after SEC if no login name is read
                -I INITSTR      Send INITSTR before anything else
                -H HOST         Log HOST into the utmp file as the hostname

        BAUD_RATE of 0 leaves it unchanged

    grep
        grep [-HhnlLoqvsriwFE] [-m N] [-A/B/C N] PATTERN/-e PATTERN.../-f
        FILE [FILE]...

        Search for PATTERN in FILEs (or stdin)

                -H      Add 'filename:' prefix
                -h      Do not add 'filename:' prefix
                -n      Add 'line_no:' prefix
                -l      Show only names of files that match
                -L      Show only names of files that don't match
                -c      Show only count of matching lines
                -o      Show only the matching part of line
                -q      Quiet. Return 0 if PATTERN is found, 1 otherwise
                -v      Select non-matching lines
                -s      Suppress open and read errors
                -r      Recurse
                -i      Ignore case
                -w      Match whole words only
                -x      Match whole lines only
                -F      PATTERN is a literal (not regexp)
                -E      PATTERN is an extended regexp
                -m N    Match up to N times per file
                -A N    Print N lines of trailing context
                -B N    Print N lines of leading context
                -C N    Same as '-A N -B N'
                -e PTRN Pattern to match
                -f FILE Read pattern from file

    gunzip
        gunzip [-cft] [FILE]...

        Decompress FILEs (or stdin)

                -c      Write to stdout
                -f      Force
                -t      Test file integrity

    gzip
        gzip [-cfd] [FILE]...

        Compress FILEs (or stdin)

                -d      Decompress
                -c      Write to stdout
                -f      Force

    halt
        halt [-d DELAY] [-n] [-f]

        Halt the system

                -d SEC  Delay interval
                -n      Do not sync
                -f      Force (don't go through init)

    hostname
        hostname [OPTIONS] [HOSTNAME | -F FILE]

        Get or set hostname or DNS domain name

                -s      Short
                -i      Addresses for the hostname
                -d      DNS domain name
                -f      Fully qualified domain name
                -F FILE Use FILE's content as hostname

    hush
        hush [-nxl] [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]

        Unix shell interpreter

    ifconfig
        ifconfig [-a] interface [address]

        Configure a network interface

                [[-]broadcast [ADDRESS]] [[-]pointopoint [ADDRESS]]
                [netmask ADDRESS] [dstaddr ADDRESS]
                [outfill NN] [keepalive NN]
                [hw ether ADDRESS] [metric NN] [mtu NN]
                [[-]trailers] [[-]arp] [[-]allmulti]
                [multicast] [[-]promisc] [txqueuelen NN] [[-]dynamic]
                [mem_start NN] [io_addr NN] [irq NN]
                [up|down] ...

    ifdown
        ifdown [-anmvf] [-i FILE] IFACE...

                -a      De/configure all interfaces automatically
                -i FILE Use FILE for interface definitions
                -n      Print out what would happen, but don't do it
                        (note: doesn't disable mappings)
                -m      Don't run any mappings
                -v      Print out what would happen before doing it
                -f      Force de/configuration

    ifenslave
        ifenslave [-cdf] MASTER_IFACE SLAVE_IFACE...

        Configure network interfaces for parallel routing

                -c,--change-active      Change active slave
                -d,--detach             Remove slave interface from bonding device
                -f,--force              Force, even if interface is not Ethernet

    ifplugd
        ifplugd [OPTIONS]

        Network interface plug detection daemon

                -n              Don't daemonize
                -s              Don't log to syslog
                -i IFACE        Interface
                -f/-F           Treat link detection error as link down/link up
                                (otherwise exit on error)
                -a              Don't up interface at each link probe
                -M              Monitor creation/destruction of interface
                                (otherwise it must exist)
                -r PROG         Script to run
                -x ARG          Extra argument for script
                -I              Don't exit on nonzero exit code from script
                -p              Don't run "up" script on startup
                -q              Don't run "down" script on exit
                -l              Always run script on startup
                -t SECS         Poll time in seconds
                -u SECS         Delay before running script after link up
                -d SECS         Delay after link down
                -m MODE         API mode (mii, priv, ethtool, wlan, iff, auto)
                -k              Kill running daemon

    ifup
        ifup [-anmvf] [-i FILE] IFACE...

                -a      De/configure all interfaces automatically
                -i FILE Use FILE for interface definitions
                -n      Print out what would happen, but don't do it
                        (note: doesn't disable mappings)
                -m      Don't run any mappings
                -v      Print out what would happen before doing it
                -f      Force de/configuration

    init
        init

        Init is the first process started during boot. It never exits. It
        (re)spawns children according to /etc/inittab.

    insmod
        insmod [-qfwrsv] MODULE [symbol=value]...

                -r      Remove MODULE (stacks) or do autoclean
                -q      Quiet
                -v      Verbose
                -f      Force
                -w      Wait for unload
                -s      Report via syslog instead of stderr

    ip  ip [OPTIONS] {address | route | link | tunnel | rule} {COMMAND}

        ip [OPTIONS] OBJECT {COMMAND} where OBJECT := {address | route |
        link | tunnel | rule} OPTIONS := { -f[amily] { inet | inet6 | link }
        | -o[neline] }

    ipaddr
        ipaddr { {add|del} IFADDR dev STRING | {show|flush} [dev STRING] [to
        PREFIX] }

        ipaddr {add|delete} IFADDR dev STRING ipaddr {show|flush} [dev
        STRING] [scope SCOPE-ID] [to PREFIX] [label PATTERN] IFADDR :=
        PREFIX | ADDR peer PREFIX [broadcast ADDR] [anycast ADDR] [label
        STRING] [scope SCOPE-ID] SCOPE-ID := [host | link | global | NUMBER]

    iplink
        iplink { set DEVICE { up | down | arp { on | off } | show [DEVICE] }

        iplink set DEVICE { up | down | arp | multicast { on | off } |
        dynamic { on | off } | mtu MTU } iplink show [DEVICE]

    iproute
        iproute { list | flush | add | del | change | append | replace |
        test } ROUTE

        iproute { list | flush } SELECTOR iproute get ADDRESS [from ADDRESS
        iif STRING] [oif STRING] [tos TOS] iproute { add | del | change |
        append | replace | test } ROUTE SELECTOR := [root PREFIX] [match
        PREFIX] [proto RTPROTO] ROUTE := [TYPE] PREFIX [tos TOS] [proto
        RTPROTO] [metric METRIC]

    iprule
        iprule {[list | add | del] RULE}

        iprule [list | add | del] SELECTOR ACTION SELECTOR := [from PREFIX]
        [to PREFIX] [tos TOS] [fwmark FWMARK] [dev STRING] [pref NUMBER]
        ACTION := [table TABLE_ID] [nat ADDRESS] [prohibit | reject |
        unreachable] [realms [SRCREALM/]DSTREALM] TABLE_ID := [local | main
        | default | NUMBER]

    iptunnel
        iptunnel { add | change | del | show } [NAME] [mode { ipip | gre |
        sit }] [remote ADDR] [local ADDR] [ttl TTL]

        iptunnel { add | change | del | show } [NAME] [mode { ipip | gre |
        sit }] [remote ADDR] [local ADDR] [[i|o]seq] [[i|o]key KEY]
        [[i|o]csum] [ttl TTL] [tos TOS] [[no]pmtudisc] [dev PHYS_DEV]

    kill
        kill [-l] [-SIG] PID...

        Send a signal (default: TERM) to given PIDs

                -l      List all signal names and numbers

    killall
        killall [-l] [-q] [-SIG] PROCESS_NAME...

        Send a signal (default: TERM) to given processes

                -l      List all signal names and numbers
                -q      Don't complain if no processes were killed

    killall5
        killall5 [-l] [-SIG] [-o PID]...

        Send a signal (default: TERM) to all processes outside current
        session

                -l      List all signal names and numbers
                -o PID  Don't signal this PID

    ln  ln [OPTIONS] TARGET... LINK|DIR

        Create a link LINK or DIR/TARGET to the specified TARGET(s)

                -s      Make symlinks instead of hardlinks
                -f      Remove existing destinations
                -n      Don't dereference symlinks - treat like normal file
                -b      Make a backup of the target (if exists) before link operation
                -S suf  Use suffix instead of ~ when making backup files
                -T      2nd arg must be a DIR
                -v      Verbose

    ls  ls [-1AaCxdLHRFplinserSXvctu] [FILE]...

        List directory contents

                -1      One column output
                -a      Include entries which start with .
                -A      Like -a, but exclude . and ..
                -C      List by columns
                -x      List by lines
                -d      List directory entries instead of contents
                -L      Follow symlinks
                -H      Follow symlinks on command line
                -R      Recurse
                -p      Append / to dir entries
                -F      Append indicator (one of */=@|) to entries
                -l      Long listing format
                -i      List inode numbers
                -n      List numeric UIDs and GIDs instead of names
                -s      List allocated blocks
                -e      List full date and time
                -r      Sort in reverse order
                -S      Sort by size
                -X      Sort by extension
                -v      Sort by version
                -c      With -l: sort by ctime
                -t      With -l: sort by mtime
                -u      With -l: sort by atime
                --color[={always,never,auto}]   Control coloring

    lsmod
        lsmod [-qfwrsv] MODULE [symbol=value]...

                -r      Remove MODULE (stacks) or do autoclean
                -q      Quiet
                -v      Verbose
                -f      Force
                -w      Wait for unload
                -s      Report via syslog instead of stderr

    mdev
        mdev [-s]

        mdev -s is to be run during boot to scan /sys and populate /dev.

        Bare mdev is a kernel hotplug helper. To activate it: echo
        /sbin/mdev >/proc/sys/kernel/hotplug

        It uses /etc/mdev.conf with lines [-][ENV=regex;]...DEVNAME UID:GID
        PERM [>|=PATH]|[!] [@|$|*PROG] where DEVNAME is device name regex,
        @major,minor[-minor2], or environment variable regex. A common use
        of the latter is to load modules for hotplugged devices:

                $MODALIAS=.* 0:0 660 @modprobe "$MODALIAS"

        If /dev/mdev.seq file exists, mdev will wait for its value to match
        $SEQNUM variable. This prevents plug/unplug races. To activate this
        feature, create empty /dev/mdev.seq at boot.

        If /dev/mdev.log file exists, debug log will be appended to it.

    mesg
        mesg [y|n]

        Control write access to your terminal y Allow write access to your
        terminal n Disallow write access to your terminal

    mkdir
        mkdir [OPTIONS] DIRECTORY...

        Create DIRECTORY

                -m MODE Mode
                -p      No error if exists; make parent directories as needed

    mknod
        mknod [-m MODE] NAME TYPE MAJOR MINOR

        Create a special file (block, character, or pipe)

                -m MODE Creation mode (default a=rw)
        TYPE:
                b       Block device
                c or u  Character device
                p       Named pipe (MAJOR and MINOR are ignored)

    modinfo
        modinfo [-adlp0] [-F keyword] MODULE

                -a              Shortcut for '-F author'
                -d              Shortcut for '-F description'
                -l              Shortcut for '-F license'
                -p              Shortcut for '-F parm'
                -F keyword      Keyword to look for
                -0              Separate output with NULs

    modprobe
        modprobe [-qfwrsv] MODULE [symbol=value]...

                -r      Remove MODULE (stacks) or do autoclean
                -q      Quiet
                -v      Verbose
                -f      Force
                -w      Wait for unload
                -s      Report via syslog instead of stderr

    mount
        mount [OPTIONS] [-o OPTS] DEVICE NODE

        Mount a filesystem. Filesystem autodetection requires /proc.

                -a              Mount all filesystems in fstab
                -f              Dry run
                -v              Verbose
                -r              Read-only mount
                -w              Read-write mount (default)
                -t FSTYPE[,...] Filesystem type(s)
                -O OPT          Mount only filesystems with option OPT (-a only)
        -o OPT:
                loop            Ignored (loop devices are autodetected)
                [a]sync         Writes are [a]synchronous
                [no]atime       Disable/enable updates to inode access times
                [no]diratime    Disable/enable atime updates to directories
                [no]relatime    Disable/enable atime updates relative to modification time
                [no]dev         (Dis)allow use of special device files
                [no]exec        (Dis)allow use of executable files
                [no]suid        (Dis)allow set-user-id-root programs
                [r]shared       Convert [recursively] to a shared subtree
                [r]slave        Convert [recursively] to a slave subtree
                [r]private      Convert [recursively] to a private subtree
                [un]bindable    Make mount point [un]able to be bind mounted
                [r]bind         Bind a file or directory [recursively] to another location
                move            Relocate an existing mount point
                remount         Remount a mounted filesystem, changing flags
                ro/rw           Same as -r/-w

        There are filesystem-specific -o flags.

    mv  mv [-fin] SOURCE DEST or: mv [-fin] SOURCE... DIRECTORY

        Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY

                -f      Don't prompt before overwriting
                -i      Interactive, prompt before overwrite
                -n      Don't overwrite an existing file

    netstat
        netstat [-al] [-tuwx] [-enWp]

        Display networking information

                -a      All sockets
                -l      Listening sockets
                        Else: connected sockets
                -t      TCP sockets
                -u      UDP sockets
                -w      Raw sockets
                -x      Unix sockets
                        Else: all socket types
                -e      Other/more information
                -n      Don't resolve names
                -W      Wide display
                -p      Show PID/program name for sockets

    passwd
        passwd [OPTIONS] [USER]

        Change USER's password (default: current user)

                -a ALG  Encryption method
                -d      Set password to ''
                -l      Lock (disable) account
                -u      Unlock (enable) account

    ping
        ping [OPTIONS] HOST

        Send ICMP ECHO_REQUEST packets to network hosts

                -c CNT          Send only CNT pings
                -s SIZE         Send SIZE data bytes in packets (default:56)
                -t TTL          Set TTL
                -I IFACE/IP     Use interface or IP address as source
                -W SEC          Seconds to wait for the first response (default:10)
                                (after all -c CNT packets are sent)
                -w SEC          Seconds until ping exits (default:infinite)
                                (can exit earlier with -c CNT)
                -q              Quiet, only displays output at start
                                and when finished

    poweroff
        poweroff [-d DELAY] [-n] [-f]

        Halt and shut off power

                -d SEC  Delay interval
                -n      Do not sync
                -f      Force (don't go through init)

    printenv
        printenv [VARIABLE]...

        Print environment VARIABLEs. If no VARIABLE specified, print all.

    printf
        printf FORMAT [ARG]...

        Format and print ARG(s) according to FORMAT (a-la C printf)

    ps  ps

        Show list of processes

                w       Wide output
                l       Long output

    pwd pwd

        Print the full filename of the current working directory

    reboot
        reboot [-d DELAY] [-n] [-f]

        Reboot the system

                -d SEC  Delay interval
                -n      Do not sync
                -f      Force (don't go through init)

    rm  rm [-irf] FILE...

        Remove (unlink) FILEs

                -i      Always prompt before removing
                -f      Never prompt
                -R,-r   Recurse

    rmdir
        rmdir [OPTIONS] DIRECTORY...

        Remove DIRECTORY if it is empty

                -p|--parents    Include parents
                --ignore-fail-on-non-empty

    rmmod
        rmmod [-qfwrsv] MODULE [symbol=value]...

                -r      Remove MODULE (stacks) or do autoclean
                -q      Quiet
                -v      Verbose
                -f      Force
                -w      Wait for unload
                -s      Report via syslog instead of stderr

    sed sed [-inrE] [-f FILE]... [-e CMD]... [FILE]... or: sed [-inrE] CMD
        [FILE]...

                -e CMD  Add CMD to sed commands to be executed
                -f FILE Add FILE contents to sed commands to be executed
                -i[SFX] Edit files in-place (otherwise sends to stdout)
                        Optionally back files up, appending SFX
                -n      Suppress automatic printing of pattern space
                -r,-E   Use extended regex syntax

        If no -e or -f, the first non-option argument is the sed command
        string. Remaining arguments are input files (stdin if none).

    sh  sh [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
        [ARGS]]

        Unix shell interpreter

    sleep
        sleep [N]...

        Pause for a time equal to the total of the args given, where each
        arg can have an optional suffix of (s)econds, (m)inutes, (h)ours, or
        (d)ays

    stat
        stat [OPTIONS] FILE...

        Display file (default) or filesystem status

                -c fmt  Use the specified format
                -f      Display filesystem status
                -L      Follow links
                -t      Display info in terse form

        Valid format sequences for files:

         %a     Access rights in octal
         %A     Access rights in human readable form
         %b     Number of blocks allocated (see %B)
         %B     The size in bytes of each block reported by %b
         %d     Device number in decimal
         %D     Device number in hex
         %f     Raw mode in hex
         %F     File type
         %g     Group ID of owner
         %G     Group name of owner
         %h     Number of hard links
         %i     Inode number
         %n     File name
         %N     File name, with -> TARGET if symlink
         %o     I/O block size
         %s     Total size, in bytes
         %t     Major device type in hex
         %T     Minor device type in hex
         %u     User ID of owner
         %U     User name of owner
         %x     Time of last access
         %X     Time of last access as seconds since Epoch
         %y     Time of last modification
         %Y     Time of last modification as seconds since Epoch
         %z     Time of last change
         %Z     Time of last change as seconds since Epoch

        Valid format sequences for file systems:

         %a     Free blocks available to non-superuser
         %b     Total data blocks in file system
         %c     Total file nodes in file system
         %d     Free file nodes in file system
         %f     Free blocks in file system
         %i     File System ID in hex
         %l     Maximum length of filenames
         %n     File name
         %s     Block size (for faster transfer)
         %S     Fundamental block size (for block counts)
         %t     Type in hex
         %T     Type in human readable form

    sync
        sync

        Write all buffered blocks to disk

    tar tar -[cxthmvO] [-X FILE] [-T FILE] [-f TARFILE] [-C DIR] [FILE]...

        Create, extract, or list files from a tar file

        Operation:

                c       Create
                x       Extract
                t       List
                f       Name of TARFILE ('-' for stdin/out)
                C       Change to DIR before operation
                v       Verbose
                O       Extract to stdout
                h       Follow symlinks
                m       Don't restore mtime
                exclude File to exclude
                X       File with names to exclude
                T       File with names to include

    top top [-b] [-nCOUNT] [-dSECONDS] [-m]

        Provide a view of process activity in real time. Read the status of
        all processes from /proc each SECONDS and display a screenful of
        them. Keys:

                N/M/P/T: show CPU usage, sort by pid/mem/cpu/time
                S: show memory
                R: reverse sort
                1: toggle SMP
                Q,^C: exit

        Options:

                -b      Batch mode
                -n N    Exit after N iterations
                -d N    Delay between updates
                -m      Same as 's' key

    true
        true

        Return an exit code of TRUE (0)

    udhcpc
        udhcpc [-fbqvaRB] [-t N] [-T SEC] [-A SEC/-n] [-i IFACE] [-s PROG]
        [-p PIDFILE] [-oC] [-r IP] [-V VENDOR] [-F NAME] [-x OPT:VAL]... [-O
        OPT]...

                -i,--interface IFACE    Interface to use (default eth0)
                -s,--script PROG        Run PROG at DHCP events (default /usr/share/udhcpc/default.script)
                -p,--pidfile FILE       Create pidfile
                -B,--broadcast          Request broadcast replies
                -t,--retries N          Send up to N discover packets (default 3)
                -T,--timeout SEC        Pause between packets (default 3)
                -A,--tryagain SEC       Wait if lease is not obtained (default 20)
                -n,--now                Exit if lease is not obtained
                -q,--quit               Exit after obtaining lease
                -R,--release            Release IP on exit
                -f,--foreground         Run in foreground
                -b,--background         Background if lease is not obtained
                -S,--syslog             Log to syslog too
                -a,--arping             Use arping to validate offered address
                -r,--request IP         Request this IP address
                -o,--no-default-options Don't request any options (unless -O is given)
                -O,--request-option OPT Request option OPT from server (cumulative)
                -x OPT:VAL              Include option OPT in sent packets (cumulative)
                                        Examples of string, numeric, and hex byte opts:
                                        -x hostname:bbox - option 12
                                        -x lease:3600 - option 51 (lease time)
                                        -x 0x3d:0100BEEFC0FFEE - option 61 (client id)
                -F,--fqdn NAME          Ask server to update DNS mapping for NAME
                -V,--vendorclass VENDOR Vendor identifier (default 'udhcp VERSION')
                -C,--clientid-none      Don't send MAC as client identifier
                -v                      Verbose
        Signals:

                USR1    Renew lease
                USR2    Release lease

    umount
        umount [OPTIONS] FILESYSTEM|DIRECTORY

        Unmount file systems

                -a      Unmount all file systems
                -r      Try to remount devices as read-only if mount is busy
                -l      Lazy umount (detach filesystem)
                -f      Force umount (i.e., unreachable NFS server)
                -D      Don't free loop device even if it has been used

    uncompress
        uncompress [-cf] [FILE]...

        Decompress .Z file[s]

                -c      Write to stdout
                -f      Overwrite

    unix2dos
        unix2dos [-ud] [FILE]

        Convert FILE in-place from Unix to DOS format. When no file is
        given, use stdin/stdout.

                -u      dos2unix
                -d      unix2dos

    usleep
        usleep N

        Pause for N microseconds

    vi  vi [OPTIONS] [FILE]...

        Edit FILE

                -c CMD  Initial command to run ($EXINIT also available)
                -R      Read-only
                -H      List available features

    watch
        watch [-n SEC] [-t] PROG ARGS

        Run PROG periodically

                -n      Loop period in seconds (default 2)
                -t      Don't print header

    wc  wc [-clwL] [FILE]...

        Count lines, words, and bytes for each FILE (or stdin)

                -c      Count bytes
                -l      Count newlines
                -w      Count words
                -L      Print longest line length

    wget
        wget [-c|--continue] [-s|--spider] [-q|--quiet]
        [-O|--output-document FILE] [--header 'header: value'] [-Y|--proxy
        on/off] [-P DIR] [-U|--user-agent AGENT] [-T SEC] URL...

        Retrieve files via HTTP or FTP

                -s      Spider mode - only check file existence
                -c      Continue retrieval of aborted transfer
                -q      Quiet
                -P DIR  Save to DIR (default .)
                -T SEC  Network read timeout is SEC seconds
                -O FILE Save to FILE ('-' for stdout)
                -U STR  Use STR for User-Agent header
                -Y      Use proxy ('on' or 'off')

    zcat
        zcat [FILE]...

        Decompress to stdout

LIBC NSS
    GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the
    behavior of the C library for the local environment, and to configure
    how it reads system data, such as passwords and group information. This
    is implemented using an /etc/nsswitch.conf configuration file, and using
    one or more of the /lib/libnss_* libraries. BusyBox tries to avoid using
    any libc calls that make use of NSS. Some applets however, such as login
    and su, will use libc functions that require NSS.

    If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions
    to directly access the /etc/passwd, /etc/group, and /etc/shadow files
    without using NSS. This may allow you to run your system without the
    need for installing any of the NSS configuration files and libraries.

    When used with glibc, the BusyBox 'networking' applets will similarly
    require that you install at least some of the glibc NSS stuff (in
    particular, /etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*,
    and /lib/libresolv*).

    Shameless Plug: As an alternative, one could use a C library such as
    uClibc. In addition to making your system significantly smaller, uClibc
    does not require the use of any NSS support files or libraries.

MAINTAINER
    Denis Vlasenko <vda.linux@googlemail.com>

AUTHORS
    The following people have contributed code to BusyBox whether they know
    it or not. If you have written code included in BusyBox, you should
    probably be listed here so you can obtain your bit of eternal glory. If
    you should be listed here, or the description of what you have done
    needs more detail, or is incorrect, please send in an update.

    Emanuele Aina <emanuele.aina@tiscali.it> run-parts

    Erik Andersen <andersen@codepoet.org>

        Tons of new stuff, major rewrite of most of the
        core apps, tons of new apps as noted in header files.
        Lots of tedious effort writing these boring docs that
        nobody is going to actually read.

    Laurence Anderson <l.d.anderson@warwick.ac.uk>

        rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm

    Jeff Angielski <jeff@theptrgroup.com>

        ftpput, ftpget

    Edward Betts <edward@debian.org>

        expr, hostid, logname, whoami

    John Beppu <beppu@codepoet.org>

        du, nslookup, sort

    Brian Candler <B.Candler@pobox.com>

        tiny-ls(ls)

    Randolph Chung <tausq@debian.org>

        fbset, ping, hostname

    Dave Cinege <dcinege@psychosis.com>

        more(v2), makedevs, dutmp, modularization, auto links file,
        various fixes, Linux Router Project maintenance

    Jordan Crouse <jordan@cosmicpenguin.net>

        ipcalc

    Magnus Damm <damm@opensource.se>

        tftp client insmod powerpc support

    Larry Doolittle <ldoolitt@recycle.lbl.gov>

        pristine source directory compilation, lots of patches and fixes.

    Glenn Engel <glenne@engel.org>

        httpd

    Gennady Feldman <gfeldman@gena01.com>

        Sysklogd (single threaded syslogd, IPC Circular buffer support,
        logread), various fixes.

    Karl M. Hegbloom <karlheg@debian.org>

        cp_mv.c, the test suite, various fixes to utility.c, &c.

    Daniel Jacobowitz <dan@debian.org>

        mktemp.c

    Matt Kraai <kraai@alumni.cmu.edu>

        documentation, bugfixes, test suite

    Stephan Linz <linz@li-pro.net>

        ipcalc, Red Hat equivalence

    John Lombardo <john@deltanet.com>

        tr

    Glenn McGrath <bug1@iinet.net.au>

        Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
        nameif, sed, patch, fold, install, uudecode.
        Various bugfixes, review and apply numerous patches.

    Manuel Novoa III <mjn3@codepoet.org>

        cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
        mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
        get_last_path_component, simplify_path, and a number trivial libbb routines

        also bug fixes, partial rewrites, and size optimizations in
        ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
        mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
        interface, dutmp, ifconfig, route

    Vladimir Oleynik <dzo@simtreas.ru>

        cmdedit; xargs(current), httpd(current);
        ports: ash, crond, fdisk, inetd, stty, traceroute, top;
        locale, various fixes
        and irreconcilable critic of everything not perfect.

    Bruce Perens <bruce@pixar.com>

        Original author of BusyBox in 1995, 1996. Some of his code can
        still be found hiding here and there...

    Tim Riker <Tim@Rikers.org>

        bug fixes, member of fan club

    Kent Robotti <robotti@metconnect.com>

        reset, tons and tons of bug reports and patches.

    Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>

        wget - Contributed by permission of Covad Communications

    Pavel Roskin <proski@gnu.org>

        Lots of bugs fixes and patches.

    Gyepi Sam <gyepi@praxis-sw.com>

        Remote logging feature for syslogd

    Linus Torvalds <torvalds@transmeta.com>

        mkswap, fsck.minix, mkfs.minix

    Mark Whitley <markw@codepoet.org>

        grep, sed, cut, xargs(previous),
        style-guide, new-applet-HOWTO, bug fixes, etc.

    Charles P. Wright <cpwright@villagenet.com>

        gzip, mini-netcat(nc)

    Enrique Zanardi <ezanardi@ull.es>

        tarcat (since removed), loadkmap, various fixes, Debian maintenance

    Tito Ragusa <farmatito@tiscali.it>

        devfsd and size optimizations in strings, openvt and deallocvt.

    Paul Fox <pgf@foxharp.boston.ma.us>

        vi editing mode for ash, various other patches/fixes

    Roberto A. Foglietta <me@roberto.foglietta.name>

        port: dnsd

    Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

        misc

    Mike Frysinger <vapier@gentoo.org>

        initial e2fsprogs, printenv, setarch, sum, misc

    Jie Zhang <jie.zhang@analog.com>

        fixed two bugs in msh and hush (exitcode of killed processes)

